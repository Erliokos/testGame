{"version":3,"sources":["assets/scripts/Board.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { BubbleType } from './constants/bubbleSpriteFrame';\nimport config from './constants/config'\nimport { getNewPositionByStep } from './utils/getNewPositionByStep';\nimport { searchBombField, searchLineVertical } from './utils/searchLineVertical';\nimport { searchNeighbor } from './utils/searchNeighbor';\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class Board extends cc.Component {\n\n    bubblePrefab: cc.Prefab\n\n    board: Array<Array<cc.Node | null>> = new Array(config.BOARD_WIDTH).fill(null).map(() => new Array(config.BOARD_HEIGHT).fill(null));\n\n    stepX: number\n\n    stepY: number\n\n    onBubbleClick: (position: cc.Vec2, type: BubbleType) => void = () => { };\n\n    initGame(bubblePrefab: cc.Prefab, onBubbleClick: VoidFunction) {\n        this.initStep()\n        this.bubblePrefab = bubblePrefab\n        this.onBubbleClick = onBubbleClick\n        this.createBoard()\n    }\n\n    clear() {\n        for (let y = 0; y < config.BOARD_WIDTH; y++) {\n            for (let x = 0; x < config.BOARD_HEIGHT; x++) {\n                const node = this.board[y]?.[x];\n                if (node && node.isValid) {\n                    node.destroy();\n                }\n            }\n        }\n        this.board = new Array(config.BOARD_WIDTH).fill(null).map(() => new Array(config.BOARD_HEIGHT).fill(null));\n    }\n\n    createBoard() {\n        const sizeY = config.BOARD_HEIGHT;\n        const sizeX = config.BOARD_WIDTH;\n\n\n        for (let x = 0; x < sizeX; x++) {\n            for (let y = 0; y < sizeY; y++) {\n                const node = this.createBubble(cc.v2(x, y));\n                this.board[x][y] = node\n            }\n        }\n    }\n\n    createBubble(position: cc.Vec2): cc.Node {\n        const newBubble = cc.instantiate(this.bubblePrefab)\n        const bubble = newBubble.getComponent('Bubble')\n        const newPositionByStep = getNewPositionByStep(position, this.stepX, this.stepY)\n        bubble.initType()\n        bubble.initCoord(position)\n        bubble.initSize(this.stepX > this.stepY ? this.stepY * 0.8 : this.stepX * 0.8)\n        bubble.setBubblePosition(newPositionByStep)\n        newBubble.on('bubble-click', this.handleBubbleClick, this);\n        this.node.addChild(newBubble)\n        return newBubble\n    }\n\n    getGroupToRemove(startPosition: cc.Vec2, type: BubbleType) {\n\n        const startBubbleNode = this.board[startPosition.x][startPosition.y]\n        if (!startBubbleNode) return\n\n        if(type === 'bomb') {\n            return searchBombField(startPosition, [], this.board, 2)\n        }\n        else {\n            return  searchNeighbor(startPosition, new Set<string>(), [], type, this.board)\n        }\n    }\n\n    \n\n\n    removeGroup(group: cc.Node[], startPosition: cc.Vec2, type: BubbleType): number {\n        if (group.length < 2) return 0\n        for (let i = 0; i < group.length; i++) {\n            const bubble = group[i].getComponent('Bubble')\n            this.board[bubble.coord.x][bubble.coord.y] = null\n            bubble.bubbleDestroy(type === 'bomb' ? 0 : i)\n        }\n        this.fillEmptySpace(group.length, startPosition, type)\n        return group.length\n    }\n\n    fillEmptySpace(emtyCount: number, startPosition: cc.Vec2, type: BubbleType ) {        \n        for (let x = 0; x < config.BOARD_WIDTH; x++) {\n            let stepToDown = 0\n            for (let y = 0; y < config.BOARD_HEIGHT; y++) {\n                const node = this.board[x][y]\n                if (!node) {\n                    stepToDown++\n                }\n                else if (node && stepToDown > 0) {\n                    const bubble = node.getComponent('Bubble')\n                    const newPosition = getNewPositionByStep(cc.v2(x, y - stepToDown), this.stepX, this.stepY)\n                    // Создание бонуса\n                    if (startPosition.equals(cc.v2(x, y - stepToDown)) && emtyCount > config.COUNT_TO_GET_BOMB && type !== 'bomb' ){\n                        bubble.initType('bomb')\n                    }\n                    bubble.moveToPosition(newPosition, type === 'bomb' ? 2 : emtyCount)\n                    bubble.initCoord(cc.v2(x, y - stepToDown))\n                    this.board[x][y - stepToDown] = node\n                    this.board[x][y] = null\n                }\n                else continue\n            }\n            for (let i = 0; i < stepToDown; i++) {\n                const newBubble = this.createBubble(cc.v2(x, config.BOARD_HEIGHT))\n                const bubble = newBubble.getComponent('Bubble')\n                bubble.initCoord(cc.v2(x, config.BOARD_HEIGHT - stepToDown + i))\n                this.board[x][config.BOARD_HEIGHT - stepToDown + i] = newBubble\n                const newPosition = getNewPositionByStep(cc.v2(x, config.BOARD_HEIGHT - stepToDown + i), this.stepX, this.stepY)\n                // Создание бонуса\n                if (startPosition.equals(cc.v2(x, config.BOARD_HEIGHT - stepToDown + i)) && emtyCount > config.COUNT_TO_GET_BOMB && type !== 'bomb'){\n                    bubble.initType('bomb')\n                }\n                bubble.moveToPosition(newPosition, type === 'bomb' ? 2 : emtyCount + i * 2 )\n            }\n        }\n\n    }\n\n\n\n    handleBubbleClick(position: cc.Vec2, type: BubbleType) {\n        this.onBubbleClick(position, type);\n    }\n\n    initStep() {\n        this.stepX = (this.node.width - config.BOARD_SIZE * 2) / config.BOARD_WIDTH\n        this.stepY = (this.node.height - config.BOARD_SIZE * 2) / config.BOARD_HEIGHT\n    }\n\n\n}\n"]}