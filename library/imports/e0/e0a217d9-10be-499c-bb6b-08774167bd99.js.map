{"version":3,"sources":["assets/scripts/GameController.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["const { ccclass, property } = cc._decorator;\nimport Board from './Board';\nimport { BubbleType } from './constants/bubbleSpriteFrame';\nimport config from './constants/config'\nimport GameOverView from './GameOverView';\nimport Score from './Score';\nimport Timer from './Timer';\n\n@ccclass\nexport default class GameController extends cc.Component {\n\n    @property(cc.Node)\n    boardNode: cc.Node = null;\n\n    @property(cc.Prefab)\n    bubblePrefab: cc.Prefab = null;\n\n    @property(cc.Node)\n    timeScoreBoardNode: cc.Node\n\n    @property(cc.Node)\n    gameOverNode: cc.Node\n\n    private board: Board = null;\n    private timer: Timer = null;\n    private score: Score = null;\n    private gameOver: GameOverView = null;\n\n    start() {\n        this.init()\n        this.startGame()\n    }\n\n    init(){\n        this.board = this.boardNode.getComponent('Board')\n        this.timer = this.timeScoreBoardNode.getComponent('Timer')\n        this.score = this.timeScoreBoardNode.getComponent('Score')\n        this.gameOver = this.gameOverNode.getComponent('GameOverView')\n        this.gameOverNode.on('restart_game', this.restartGame, this);\n    }\n\n    startGame() {\n        console.log('START_GAME')\n        this.board.initGame(this.bubblePrefab, this.handleBubbleClick.bind(this))\n        this.timer.initTimer(config.GAME_TIME, this.timeUp.bind(this), 1)\n        this.score.initScore(config.START_SCORE)\n    }\n\n    handleBubbleClick(position: cc.Vec2, type: BubbleType) {\n        const groupToRemove = this.board.getGroupToRemove(position, type)\n        const points = this.board.removeGroup(groupToRemove, position, type)\n        this.calculateTimeAndScore(points)\n    }\n\n    timeUp() {\n        console.log('ВРЕМЯ ВЫШЛО');\n        this.gameOver.showGameOver()\n    }\n\n    restartGame() {\n        this.board.clear()\n        this.startGame()\n        this.gameOver.hideGameOver()\n    }\n\n    calculateTimeAndScore(points: number) {\n        this.score.updateScore(points * 100)\n        this.timer.addTime(points)\n    }\n\n\n\n}\n\n"]}